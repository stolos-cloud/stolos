basePath: /api/v1
definitions:
  api.TeamInfo:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  api.TeamResponse:
    properties:
      id:
        type: string
      name:
        type: string
      users:
        items:
          $ref: '#/definitions/api.UserResponse'
        type: array
    type: object
  api.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      teams:
        items:
          $ref: '#/definitions/api.TeamInfo'
        type: array
    type: object
  config.GCPMachineType:
    properties:
      description:
        type: string
      guest_cpus:
        type: integer
      memory_mb:
        type: integer
      name:
        type: string
    type: object
  config.GCPResources:
    properties:
      last_updated:
        type: string
      machine_types_by_zone:
        additionalProperties:
          items:
            $ref: '#/definitions/config.GCPMachineType'
          type: array
        type: object
      zones:
        items:
          type: string
        type: array
    type: object
  handlers.AddUserToTeamRequest:
    properties:
      user_id:
        type: string
    required:
    - user_id
    type: object
  handlers.AuthResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  handlers.CreateTeamRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  handlers.DetailTemplate:
    properties:
      defaultYaml:
        type: string
      description:
        type: string
      jsonSchema:
        type: string
      name:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
      role:
        $ref: '#/definitions/models.Role'
    required:
    - email
    - password
    type: object
  handlers.UpdateUserRoleRequest:
    properties:
      role:
        $ref: '#/definitions/models.Role'
    required:
    - role
    type: object
  models.GCPConfig:
    properties:
      bucket_name:
        type: string
      created_at:
        type: string
      id:
        type: string
      infrastructure_status:
        description: unconfigured, pending, initializing, ready, failed
        type: string
      is_configured:
        type: boolean
      project_id:
        type: string
      region:
        type: string
      service_account_email:
        type: string
      talos_image_amd64:
        type: string
      talos_image_arm64:
        type: string
      talos_version:
        type: string
      updated_at:
        type: string
    type: object
  models.GCPNodeProvisionRequest:
    properties:
      disk_size_gb:
        example: 100
        type: integer
      disk_type:
        example: pd-standard
        type: string
      labels:
        example:
        - zone=us-central1
        items:
          type: string
        type: array
      machine_type:
        example: n1-standard-2
        type: string
      name_prefix:
        example: worker
        type: string
      number:
        example: 5
        maximum: 20
        minimum: 1
        type: integer
      role:
        example: worker
        type: string
      zone:
        example: us-central1-a
        type: string
    required:
    - machine_type
    - name_prefix
    - number
    - role
    - zone
    type: object
  models.ISORequest:
    properties:
      architecture:
        type: string
      extra_kernel_args:
        items:
          type: string
        type: array
      overlay_image:
        type: string
      overlay_name:
        type: string
      talos_version:
        type: string
    type: object
  models.ISOResponse:
    properties:
      architecture:
        type: string
      download_url:
        type: string
      filename:
        type: string
      schematic_id:
        type: string
      talos_version:
        type: string
    type: object
  models.Node:
    properties:
      architecture:
        description: amd64, arm64
        type: string
      cluster_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      instance_id:
        description: GCP instance ID
        type: string
      ip_address:
        type: string
      labels:
        description: JSON string for labels
        type: string
      mac_address:
        type: string
      name:
        type: string
      provider:
        description: onprem, gcp
        type: string
      role:
        description: worker, control-plane
        type: string
      status:
        $ref: '#/definitions/models.NodeStatus'
      updated_at:
        type: string
    type: object
  models.NodeProvisionConfig:
    properties:
      labels:
        example:
        - zone=us-east
        - type=compute
        items:
          type: string
        type: array
      node_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      role:
        example: worker
        type: string
    required:
    - node_id
    - role
    type: object
  models.NodeProvisionRequest:
    properties:
      nodes:
        items:
          $ref: '#/definitions/models.NodeProvisionConfig'
        type: array
    required:
    - nodes
    type: object
  models.NodeStatus:
    enum:
    - pending
    - provisioning
    - active
    - failed
    type: string
    x-enum-varnames:
    - StatusPending
    - StatusProvisioning
    - StatusActive
    - StatusFailed
  models.Role:
    enum:
    - admin
    - developer
    - viewer
    type: string
    x-enum-comments:
      RoleViewer: to discuss I thought it could be useful
    x-enum-descriptions:
    - ""
    - ""
    - to discuss I thought it could be useful
    x-enum-varnames:
    - RoleAdmin
    - RoleDeveloper
    - RoleViewer
  node.NodeConfigUpdate:
    properties:
      id:
        type: string
      labels:
        items:
          type: string
        type: array
    type: object
  templates.Template:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
info:
  contact:
    email: support@stolos.cloud
    name: API Support
    url: https://github.com/stolos-cloud/stolos
  description: API for Stolos Cloud Platform
  license:
    name: TBD
    url: http://TBD
  termsOfService: http://swagger.io/terms/
  title: Stolos API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /auth/profile:
    get:
      consumes:
      - application/json
      description: Retrieve the profile of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/api.UserResponse'
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh the JWT token for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Refresh JWT token
      tags:
      - auth
  /cluster/info:
    get:
      description: Get general cluster information including name and GitOps repository
      produces:
      - application/json
      responses:
        "200":
          description: cluster_name, gitops_repo_owner, gitops_repo_name, gitops_branch
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get cluster info
      tags:
      - cluster
  /gcp/bucket:
    post:
      consumes:
      - application/json
      description: Create a GCP bucket for storing Terraform state files
      parameters:
      - description: GCP project ID and region
        in: body
        name: config
        required: true
        schema:
          properties:
            project_id:
              type: string
            region:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create GCP Terraform bucket
      tags:
      - gcp
  /gcp/configure:
    post:
      consumes:
      - application/json
      description: Configure GCP with provided project ID, region, and service account
        JSON
      parameters:
      - description: GCP configuration
        in: body
        name: config
        required: true
        schema:
          properties:
            region:
              type: string
            service_account_json:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GCPConfig'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Configure GCP
      tags:
      - gcp
  /gcp/configure/upload:
    post:
      consumes:
      - multipart/form-data
      description: Configure GCP by uploading service account JSON file
      parameters:
      - description: GCP Region
        in: formData
        name: region
        required: true
        type: string
      - description: Service Account JSON file
        in: formData
        name: service_account_file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GCPConfig'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Configure GCP with file upload
      tags:
      - gcp
  /gcp/delete-infra:
    post:
      consumes:
      - application/json
      description: Destroy the Terraform infrastructure on GCP
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Destroy Terraform infrastructure
      tags:
      - gcp
  /gcp/init-infra:
    post:
      consumes:
      - application/json
      description: Initialize the Terraform infrastructure on GCP
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Initialize Terraform infrastructure
      tags:
      - gcp
  /gcp/nodes/provision:
    post:
      consumes:
      - application/json
      description: Create a provision request and return request_id for WebSocket
        connection
      parameters:
      - description: Node provision request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.GCPNodeProvisionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Provision GCP nodes with Talos
      tags:
      - gcp
  /gcp/nodes/provision/{request_id}/stream:
    get:
      description: Connect to this WebSocket endpoint to receive real-time logs and
        approval requests
      parameters:
      - description: Provision request ID
        in: path
        name: request_id
        required: true
        type: string
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      responses: {}
      summary: WebSocket stream for GCP node provisioning
      tags:
      - gcp
  /gcp/query-instances:
    post:
      consumes:
      - application/json
      description: Query and store GCP instances in the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Query GCP instances
      tags:
      - gcp
  /gcp/resources:
    get:
      consumes:
      - application/json
      description: Get list of available zones and machine types for VM provisioning
        forms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.GCPResources'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get available GCP resources
      tags:
      - gcp
  /gcp/resources/refresh:
    post:
      consumes:
      - application/json
      description: Fetch and update the cached list of zones and machine types from
        GCP
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Refresh GCP resources cache
      tags:
      - gcp
  /gcp/status:
    get:
      consumes:
      - application/json
      description: Retrieve the current GCP configuration status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get GCP configuration status
      tags:
      - gcp
  /gcp/terraform/force-unlock:
    post:
      consumes:
      - application/json
      description: 'Remove a stuck Terraform state lock. WARNING: Only use when certain
        no operations are running'
      parameters:
      - description: Lock ID from the error message
        in: body
        name: body
        required: true
        schema:
          properties:
            lock_id:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Force unlock Terraform state
      tags:
      - gcp
  /iso/generate:
    post:
      consumes:
      - application/json
      description: Generate a custom Talos ISO image for on-prem node provisioning
        using the image factory
      parameters:
      - description: ISO generation parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ISORequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ISOResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Generate a custom Talos ISO
      tags:
      - iso
  /nodes:
    get:
      consumes:
      - application/json
      description: Get list of nodes with optional status filter
      parameters:
      - description: Node status filter (pending, active, failed)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Node'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List nodes
      tags:
      - nodes
  /nodes/{id}/config:
    put:
      consumes:
      - application/json
      description: Update a single active node's role and labels
      parameters:
      - description: Node ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Node configuration
        in: body
        name: request
        required: true
        schema:
          properties:
            labels:
              items:
                type: string
              type: array
            role:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Node'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update active node configuration
      tags:
      - nodes
  /nodes/config:
    put:
      consumes:
      - application/json
      description: Update labels for multiple nodes (for active nodes only, does not
        change role)
      parameters:
      - description: Array of node label updates
        in: body
        name: request
        required: true
        schema:
          properties:
            nodes:
              items:
                $ref: '#/definitions/node.NodeConfigUpdate'
              type: array
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Returns updated count and nodes array
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update multiple nodes labels
      tags:
      - nodes
  /nodes/provision:
    post:
      consumes:
      - application/json
      description: Apply Talos configuration to multiple pending nodes and add them
        to the cluster
      parameters:
      - description: Array of nodes to provision with role and labels
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.NodeProvisionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns provisioned count and nodes array
          schema:
            $ref: '#/definitions/models.NodeProvisionRequest'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Provision multiple on-prem nodes
      tags:
      - nodes
  /nodes/samples:
    post:
      consumes:
      - application/json
      description: Create samples pending nodes for testing purposes
      produces:
      - application/json
      responses:
        "200":
          description: Message indicating success
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create samples pending nodes
      tags:
      - nodes
  /teams:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all teams. Admins see all teams, users see only
        their teams.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/api.TeamResponse'
              type: array
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get list of teams
      tags:
      - teams
    post:
      consumes:
      - application/json
      description: Create a new team with the provided name
      parameters:
      - description: Team creation request
        in: body
        name: team
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateTeamRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new team
      tags:
      - teams
  /teams/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific team by ID. Team must have no associated deployments.
      parameters:
      - description: Team ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a team
      tags:
      - teams
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific team by ID, including its users
      parameters:
      - description: Team ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/api.TeamResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get team details
      tags:
      - teams
  /teams/{id}/users:
    post:
      consumes:
      - application/json
      description: Add a user to a specific team by user ID
      parameters:
      - description: Team ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: User addition request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.AddUserToTeamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Add a user to a team
      tags:
      - teams
  /teams/{id}/users/{user_id}:
    delete:
      consumes:
      - application/json
      description: Remove a user from a specific team by user ID
      parameters:
      - description: Team ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: User ID (UUID)
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove a user from a team
      tags:
      - teams
  /templates:
    get:
      description: returns a list of available templates on the cluster
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/templates.Template'
            type: array
        "500":
          description: error
          schema:
            type: string
      summary: Get templates list
      tags:
      - templates
  /templates/{id}:
    get:
      description: Get a template from a CRD and returns it, its json schema and a
        default yaml
      parameters:
      - description: template CRD name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.DetailTemplate'
        "500":
          description: error
          schema:
            type: string
      summary: Get a detailed template
      tags:
      - templates
  /users:
    get:
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/api.UserResponse'
              type: array
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List all users
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a user
      tags:
      - users
    get:
      description: Get details of a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/api.UserResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - users
  /users/{id}/role:
    put:
      consumes:
      - application/json
      description: Update the role of a user (e.g., admin, user)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: New role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/api.UserResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user role
      tags:
      - users
  /users/create:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              $ref: '#/definitions/api.UserResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
